#name: CI-CD DockerHub App PHP

#on:
#  push:
#    branches:
#      - main

#jobs:
#  build-and-push:
#    runs-on: ubuntu-latest

#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4

#      - name: DockerHub Login
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Build Docker image
#        run: |
#         docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/test_kube:latest -f docker_prism/dev/etc/Dockerfile docker_prism/dev

#      - name: Push Docker image
#        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/test_kube:latest

name: CI/CD Docker Build & Push

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY: docker.io
      IMAGE_NAME: mohamedtolbapfs/test_kube

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate image tag
        id: vars
        # à laisser si on veut garder le même tag si le même commit
        run: echo "TAG=v$(date +%Y%m%d)-${GITHUB_SHA::7}" >> $GITHUB_ENV
        # à laisser si on veut à chaque push crée une image différente malgré le même commit
        # run: echo "TAG=v$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV


      - name: Build and push Docker image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:latest \
                       -t $REGISTRY/$IMAGE_NAME:${{ env.TAG }} \
                       -f docker_prism/dev/etc/Dockerfile docker_prism/dev
          docker push $REGISTRY/$IMAGE_NAME:latest
          docker push $REGISTRY/$IMAGE_NAME:${{ env.TAG }}

      # Optionnel : commit automatique dans k8s/deployment.yaml avec nouveau tag
